{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "Logic_Framework",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Logging",
        "printedName": "Logging",
        "declKind": "Import",
        "moduleName": "Logic_Framework"
      },
      {
        "kind": "TypeDecl",
        "name": "BasicLogic",
        "printedName": "BasicLogic",
        "children": [
          {
            "kind": "Function",
            "name": "add",
            "printedName": "add(p1:p2:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:15Logic_Framework05BasicA0C3add2p12p2S2i_SitFZ",
            "mangledName": "$s15Logic_Framework05BasicA0C3add2p12p2S2i_SitFZ",
            "moduleName": "Logic_Framework",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "multiple",
            "printedName": "multiple(p1:p2:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:15Logic_Framework05BasicA0C8multiple2p12p2S2i_SitFZ",
            "mangledName": "$s15Logic_Framework05BasicA0C8multiple2p12p2S2i_SitFZ",
            "moduleName": "Logic_Framework",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "minus",
            "printedName": "minus(p1:p2:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:15Logic_Framework05BasicA0C5minus2p12p2S2i_SitFZ",
            "mangledName": "$s15Logic_Framework05BasicA0C5minus2p12p2S2i_SitFZ",
            "moduleName": "Logic_Framework",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "divide",
            "printedName": "divide(p1:p2:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Double?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Double",
                    "printedName": "Swift.Double",
                    "usr": "s:Sd"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:15Logic_Framework05BasicA0C6divide2p12p2SdSgSi_SitFZ",
            "mangledName": "$s15Logic_Framework05BasicA0C6divide2p12p2SdSgSi_SitFZ",
            "moduleName": "Logic_Framework",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:15Logic_Framework05BasicA0C",
        "mangledName": "$s15Logic_Framework05BasicA0C",
        "moduleName": "Logic_Framework",
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 233,
      "length": 16,
      "value": "\"BasicLog 1.0.3\""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 271,
      "length": 17,
      "value": "\"Add \""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 281,
      "length": 1,
      "value": "\"+\""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 287,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "IntegerLiteral",
      "offset": 315,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 417,
      "length": 16,
      "value": "\"BasicLog 1.0.3\""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 455,
      "length": 22,
      "value": "\"Multiple \""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 470,
      "length": 1,
      "value": "\"+\""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "StringLiteral",
      "offset": 476,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/ayin\/work\/test\/swift\/Logic_Framework\/Logic_Framework\/Logic.swift",
      "kind": "IntegerLiteral",
      "offset": 671,
      "length": 1,
      "value": "0"
    }
  ]
}